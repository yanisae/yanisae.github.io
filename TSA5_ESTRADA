document.addEventListener('DOMContentLoaded', () => {
  let tasks = [];
  let editingTaskId = null;
  let customCategories = [];
  let currentFilter = 'all';

  const titleInput = document.getElementById('title');
  const deadlineInput = document.getElementById('deadline');
  const categorySelect = document.getElementById('category');
  const customCategoryInput = document.getElementById('customCategory');
  const subjectInput = document.getElementById('subject');
  const statusSelect = document.getElementById('status');
  const taskList = document.getElementById('taskList');
  const greeting = document.getElementById('greeting');

  function getGreeting() {
    const now = new Date();
    const hour = now.getHours();
    if (hour < 12) return 'Good Morning!';
    if (hour < 18) return 'Good Afternoon!';
    return 'Good Evening!';
  }

  greeting.textContent = getGreeting();

  categorySelect.addEventListener('change', () => {
    if (categorySelect.value === 'custom') {
      customCategoryInput.style.display = 'block';
      subjectInput.style.display = 'none';
    } else if (categorySelect.value === 'college') {
      subjectInput.style.display = 'block';
      customCategoryInput.style.display = 'none';
    } else {
      customCategoryInput.style.display = 'none';
      subjectInput.style.display = 'none';
    }
  });

  document.getElementById('addTaskBtn').addEventListener('click', () => {
    const title = titleInput.value.trim();
    const deadline = deadlineInput.value;
    let category = categorySelect.value;
    const customCategory = customCategoryInput.value.trim();
    const subject = subjectInput.value.trim();
    const status = statusSelect.value;

    if (!title || !deadline || !category) {
      alert('Please fill in all required fields');
      return;
    }

    if (category === 'custom') {
      if (!customCategory) {
        alert('Please enter a custom category name');
        return;
      }
      category = customCategory;
      if (!customCategories.includes(customCategory)) {
        customCategories.push(customCategory);
        const newOption = document.createElement('option');
        newOption.value = customCategory;
        newOption.textContent = customCategory;
        categorySelect.insertBefore(newOption, categorySelect.lastElementChild);
      }
    }

    const task = {
      id: editingTaskId || Date.now(),
      title,
      deadline,
      category,
      subject: category === 'college' ? subject : '',
      status,
    };

    if (editingTaskId) {
      tasks = tasks.map(t => (t.id === editingTaskId ? task : t));
      editingTaskId = null;
    } else {
      tasks.push(task);
    }

    resetForm();
    renderTasks();
  });

  function resetForm() {
    titleInput.value = '';
    deadlineInput.value = '';
    categorySelect.value = '';
    customCategoryInput.value = '';
    subjectInput.value = '';
    statusSelect.value = 'starting';
    customCategoryInput.style.display = 'none';
    subjectInput.style.display = 'none';
  }

  function renderTasks() {
    taskList.innerHTML = '';
    const filtered = tasks.filter(t => currentFilter === 'all' || t.status === currentFilter);

    if (filtered.length === 0) {
      taskList.innerHTML = '<p class="no-tasks">No tasks yet</p>';
      return;
    }

    filtered.forEach(task => {
      const li = document.createElement('li');
      li.innerHTML = `
        <strong>${task.title}</strong>
        <small>Deadline: ${new Date(task.deadline).toLocaleString()}</small>
        <small>Category: ${task.category}</small>
        ${task.subject ? `<small>Subject: ${task.subject}</small>` : ''}
        <small>Status: ${task.status}</small>
        <button onclick="editTask(${task.id})">Edit</button>
        <button onclick="deleteTask(${task.id})">Delete</button>
      `;
      taskList.appendChild(li);
    });
  }

  window.editTask = function(id) {
    const task = tasks.find(t => t.id === id);
    if (!task) return;
    editingTaskId = id;

    titleInput.value = task.title;
    deadlineInput.value = task.deadline;
    categorySelect.value = customCategories.includes(task.category) ? task.category : task.category;
    customCategoryInput.value = customCategories.includes(task.category) ? task.category : '';
    subjectInput.value = task.subject;
    statusSelect.value = task.status;

    if (customCategories.includes(task.category)) {
      customCategoryInput.style.display = 'block';
    }
    if (task.category === 'college') {
      subjectInput.style.display = 'block';
    }

    window.scrollTo({ top: 0, behavior: 'smooth' });
  }

  window.deleteTask = function(id) {
    if (confirm('Delete this task?')) {
      tasks = tasks.filter(t => t.id !== id);
      renderTasks();
    }
  }

  document.querySelectorAll('.filterBtn').forEach(btn => {
    btn.addEventListener('click', () => {
      currentFilter = btn.dataset.filter;
      renderTasks();
    });
  });

  renderTasks();
});
